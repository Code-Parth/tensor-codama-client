/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getBooleanDecoder,
  getBooleanEncoder,
  getOptionDecoder,
  getOptionEncoder,
  getStructDecoder,
  getStructEncoder,
  getU16Decoder,
  getU16Encoder,
  getU64Decoder,
  getU64Encoder,
  type Codec,
  type Decoder,
  type Encoder,
  type Option,
  type OptionOrNullable,
} from "@solana/kit";
import {
  getCurveTypeDecoder,
  getCurveTypeEncoder,
  getPoolTypeDecoder,
  getPoolTypeEncoder,
  type CurveType,
  type CurveTypeArgs,
  type PoolType,
  type PoolTypeArgs,
} from ".";

export type PoolConfig = {
  poolType: PoolType;
  curveType: CurveType;
  startingPrice: bigint;
  delta: bigint;
  /** Trade pools only */
  mmCompoundFees: boolean;
  mmFeeBps: Option<number>;
};

export type PoolConfigArgs = {
  poolType: PoolTypeArgs;
  curveType: CurveTypeArgs;
  startingPrice: number | bigint;
  delta: number | bigint;
  /** Trade pools only */
  mmCompoundFees: boolean;
  mmFeeBps: OptionOrNullable<number>;
};

export function getPoolConfigEncoder(): Encoder<PoolConfigArgs> {
  return getStructEncoder([
    ["poolType", getPoolTypeEncoder()],
    ["curveType", getCurveTypeEncoder()],
    ["startingPrice", getU64Encoder()],
    ["delta", getU64Encoder()],
    ["mmCompoundFees", getBooleanEncoder()],
    ["mmFeeBps", getOptionEncoder(getU16Encoder())],
  ]);
}

export function getPoolConfigDecoder(): Decoder<PoolConfig> {
  return getStructDecoder([
    ["poolType", getPoolTypeDecoder()],
    ["curveType", getCurveTypeDecoder()],
    ["startingPrice", getU64Decoder()],
    ["delta", getU64Decoder()],
    ["mmCompoundFees", getBooleanDecoder()],
    ["mmFeeBps", getOptionDecoder(getU16Decoder())],
  ]);
}

export function getPoolConfigCodec(): Codec<PoolConfigArgs, PoolConfig> {
  return combineCodec(getPoolConfigEncoder(), getPoolConfigDecoder());
}
